{"ast":null,"code":"var _jsxFileName = \"/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js\";\nimport React from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nconst assert = (_statement, _function, _positiveOutcome) => {\n  return JSON.stringify(_function) === JSON.stringify(_positiveOutcome) ? console.log(\"YES! \".concat(_statement, \", ooph!\")) : console.log(\"NOPE! \".concat(_statement, \" works WRONG!!!\"));\n}; // COMPONENTS --------------------------------------------------------------------\n// 1. currentProjectsList\n//     1.1 State: currentProjectsList:[Project]\n//     1.2 Actions: null\n// 2. addProjectButton\n//     2.1 State: null\n//     2.2 Actions: \"addProject\"\n// -------------------------------------------------------------------------------\n// PRESENTATIONS\n// --------------------------------------------------------------------------------\n// CONTAINERS ---------------------------------------------------------------------\n// --------------------------------------------------------------------------------\n//  singleWrapper --------------------------------------------------------------------------\n\n\nconst SingleWrapper = _input => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, _input);\n\nconst ImmediateInput = _x => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \", _x.one, \" incididunt ut labore et dolore magna aliqua. Ut enim ad minim \", _x.four, \", quis nostrud exercitation\", _x.two, \" laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \", _x.one, \" velit esse cillum dolore eu fugiat nulla \", _x.three, \". Excepteur sint occaecat \", _x.one, \" non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\");\n};\n\nconst SimpleInput = _x => React.createElement(\"input\", {\n  value: _x,\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n});\n\nconst simpleEdit = _x => React.createElement(\"span\", {\n  contentEditable: \"true\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, _x);\n\nconst setFour = {\n  one: simpleEdit(\"ONE\"),\n  two: simpleEdit(\"TWO\"),\n  three: simpleEdit(\"THREE\"),\n  four: simpleEdit(\"FOUR\"),\n  solidVars: {},\n  liquidVars: {}\n};\n\nconst SideBarInput = _x => {\n  return (//<div>variables:<br/>'mesidebar'</div>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"variables:\", setFour.one)\n  );\n}; //const SetUnboxer = _set => {\n//    return(\n//    );\n//    const el = document.createElement(\"div\");\n//    el.appendChild(singleWrapper(setFour.one));\n//el.appendChild(singleWrapper(setFour.two));\n//el.appendChild(singleWrapper(setFour.three));\n//el.appendChild(singleWrapper(setFour.four));\n//    return el;    \n//};\n//const simpleText = () => {\n//    const simpleText = document.createElement(\"div\");\n//    simpleText.appendChild(singleWrapper(immediateInput(setFour)));\n//    return simpleText;\n//};\n//  multiWrapper ------------------------------------------------------------------------\n//const multiWrapper = _kids => {\n//    const localRoot = document.createElement('div');\n//    _kids.map(e => localRoot.appendChild(singleWrapper(e)));\n//    return localRoot;\n//};\n//assert(\n//    \"Local root looks like I want it to\",\n//    multiWrapper([\"one\",\"two\"]).outerHTML,\n//    `<div><div>one</div><div>two</div></div>`\n//);\n//\n//    document.getElementById('root').appendChild(simpleText());\n//    document.getElementById('sidebar').appendChild(setUnboxer(setFour));\n// COMPONENTS ----------------------------------------------------------------------------------------------\n\n\nconst Head = () => {\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Hello, I'm a doc builder! \"));\n};\n\nconst Sidebar = () => {\n  return React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(SideBarInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};\n\nconst Content = () => {\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(ImmediateInput, Object.assign({}, setFour, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })));\n}; // MAIN -------------------------------------------------------------------------------------------------------------\n\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js"],"names":["React","assert","_statement","_function","_positiveOutcome","JSON","stringify","console","log","SingleWrapper","_input","ImmediateInput","_x","one","four","two","three","SimpleInput","simpleEdit","setFour","solidVars","liquidVars","SideBarInput","Head","Sidebar","Content","App"],"mappings":"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","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n\n      const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n\n// COMPONENTS --------------------------------------------------------------------\n// 1. currentProjectsList\n//     1.1 State: currentProjectsList:[Project]\n//     1.2 Actions: null\n// 2. addProjectButton\n//     2.1 State: null\n//     2.2 Actions: \"addProject\"\n// -------------------------------------------------------------------------------\n// PRESENTATIONS\n// --------------------------------------------------------------------------------\n// CONTAINERS ---------------------------------------------------------------------\n// --------------------------------------------------------------------------------\n\n//  singleWrapper --------------------------------------------------------------------------\n\n     const SingleWrapper = _input => <div>{_input}</div>;\n\n    const ImmediateInput = _x => {\n        return (\n            <div>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                sed do eiusmod {_x.one } incididunt ut labore et dolore magna \n                aliqua. Ut enim ad minim {_x.four}, quis nostrud exercitation \n                {_x.two} laboris nisi ut aliquip ex ea commodo consequat. \n                Duis aute irure dolor in reprehenderit in {_x.one} velit \n                esse cillum dolore eu fugiat nulla {_x.three}. Excepteur sint \n                occaecat {_x.one} non proident, sunt in culpa qui officia \n                deserunt mollit anim id est laborum.\n            </div>        \n        );        \n    };\n    \n\n    const SimpleInput = _x => <input value ={_x} type = \"text\"/>\n    const simpleEdit = _x => <span contentEditable = \"true\" type = \"text\">{_x}</span>;\n    const setFour = {\n        one: simpleEdit(\"ONE\"),\n        two: simpleEdit(\"TWO\"),\n        three: simpleEdit(\"THREE\"),\n        four: simpleEdit(\"FOUR\"),\n        solidVars:{},\n        liquidVars:{}\n    };\n    const SideBarInput = _x => {\n        return (\n              //<div>variables:<br/>'mesidebar'</div>\n              \n              <div>variables:{setFour.one}</div>\n        );        \n    };\n    \n\n    //const SetUnboxer = _set => {\n    //    return(\n            \n    //    );\n    //    const el = document.createElement(\"div\");\n    //    el.appendChild(singleWrapper(setFour.one));\n        //el.appendChild(singleWrapper(setFour.two));\n        //el.appendChild(singleWrapper(setFour.three));\n        //el.appendChild(singleWrapper(setFour.four));\n    //    return el;    \n    //};\n\n    //const simpleText = () => {\n    //    const simpleText = document.createElement(\"div\");\n    //    simpleText.appendChild(singleWrapper(immediateInput(setFour)));\n    //    return simpleText;\n    //};\n    \n\n//  multiWrapper ------------------------------------------------------------------------\n \n    //const multiWrapper = _kids => {\n    //    const localRoot = document.createElement('div');\n    //    _kids.map(e => localRoot.appendChild(singleWrapper(e)));\n    //    return localRoot;\n    //};\n    //assert(\n    //    \"Local root looks like I want it to\",\n    //    multiWrapper([\"one\",\"two\"]).outerHTML,\n    //    `<div><div>one</div><div>two</div></div>`\n    //);\n\n//\n//    document.getElementById('root').appendChild(simpleText());\n//    document.getElementById('sidebar').appendChild(setUnboxer(setFour));\n\n// COMPONENTS ----------------------------------------------------------------------------------------------\n\n    const Head = () => {\n        return (\n            <div className=\"header\">\n                <h1>Hello, I'm a doc builder! </h1>\n            </div>\n        );\n    };\n    const Sidebar = () => {\n        return(\n           <div className=\"sidebar\">\n            <SideBarInput />\n           </div> \n        );\n    };\n    const Content = () => {\n        return(\n            <div className=\"content\">        \n            <ImmediateInput {...setFour} />\n           \n            </div>\n        );\n    };\n\n// MAIN -------------------------------------------------------------------------------------------------------------\n\n    const App = () => {\n      return (\n        <div className=\"wrapper\">\n            <Head />\n            <Sidebar />\n            <Content />\n        </div>\n      );\n    }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}