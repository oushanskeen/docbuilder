{"ast":null,"code":"import _slicedToArray from \"/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js\";\nimport React, { useState, useEffect } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nconst assert = (_statement, _function, _positiveOutcome) => {\n  return JSON.stringify(_function) === JSON.stringify(_positiveOutcome) ? console.log(\"YES! \".concat(_statement, \", ooph!\")) : console.log(\"NOPE! \".concat(_statement, \" works WRONG!!!\"));\n}; // COMPONENTS --------------------------------------------------------------------\n// 1. currentProjectsList\n//     1.1 State: currentProjectsList:[Project]\n//     1.2 Actions: null\n// 2. addProjectButton\n//     2.1 State: null\n//     2.2 Actions: \"addProject\"\n// -------------------------------------------------------------------------------\n// PRESENTATIONS\n// --------------------------------------------------------------------------------\n// CONTAINERS ---------------------------------------------------------------------\n// --------------------------------------------------------------------------------\n//  singleWrapper --------------------------------------------------------------------------\n\n\nconst SingleWrapper = _input => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, _input);\n\nconst ImmediateInput = _x => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \", _x.one, \" incididunt ut labore et dolore magna aliqua. Ut enim ad minim \", _x.four, \", quis nostrud exercitation\", _x.two, \" laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in \", _x.one, \" velit esse cillum dolore eu fugiat nulla \", _x.three, \". Excepteur sint occaecat \", _x.one, \" non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\");\n};\n\nconst simpleEdit = _x => React.createElement(\"span\", {\n  contentEditable: \"true\",\n  type: \"text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, _x);\n\nconst setFour = {\n  one: simpleEdit(\"ONE\"),\n  two: simpleEdit(\"TWO\"),\n  three: simpleEdit(\"THREE\"),\n  four: simpleEdit(\"FOUR\"),\n  solidVars: {},\n  liquidVars: {}\n};\n\nconst SideBarInput = _x => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"varibles:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, _x.one), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, _x.two), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, _x.three), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, _x.four));\n}; // COMPONENTS ----------------------------------------------------------------------------------------------\n\n\nconst Head = () => {\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Hello, I'm a doc builder! \"));\n};\n\nconst Sidebar = () => {\n  return React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(SideBarInput, Object.assign({}, setFour, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nconst Content = () => {\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(ImmediateInput, Object.assign({}, setFour, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nconst Alert = x => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, x); // MAIN -------------------------------------------------------------------------------------------------------------\n\n\nconst App = () => {\n  const _useState = useState('initOneState'),\n        _useState2 = _slicedToArray(_useState, 2),\n        one = _useState2[0],\n        setOne = _useState2[1];\n\n  const makeEditable = _content => {\n    return React.createElement(\"div\", {\n      contentEditable: \"true\",\n      onInput: e => setOne(e.currentTarget.textContent),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, _content);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"one init state: \", one, \" \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"div for editable content\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), makeEditable(\"text for classroom\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js"],"names":["React","useState","useEffect","assert","_statement","_function","_positiveOutcome","JSON","stringify","console","log","SingleWrapper","_input","ImmediateInput","_x","one","four","two","three","simpleEdit","setFour","solidVars","liquidVars","SideBarInput","Head","Sidebar","Content","Alert","x","App","setOne","makeEditable","_content","e","currentTarget","textContent"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n\n      const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n\n// COMPONENTS --------------------------------------------------------------------\n// 1. currentProjectsList\n//     1.1 State: currentProjectsList:[Project]\n//     1.2 Actions: null\n// 2. addProjectButton\n//     2.1 State: null\n//     2.2 Actions: \"addProject\"\n// -------------------------------------------------------------------------------\n// PRESENTATIONS\n// --------------------------------------------------------------------------------\n// CONTAINERS ---------------------------------------------------------------------\n// --------------------------------------------------------------------------------\n\n//  singleWrapper --------------------------------------------------------------------------\n\n     const SingleWrapper = _input => <div>{_input}</div>;\n\n    const ImmediateInput = _x => {\n        return (\n            <div>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                sed do eiusmod {_x.one } incididunt ut labore et dolore magna \n                aliqua. Ut enim ad minim {_x.four}, quis nostrud exercitation \n                {_x.two} laboris nisi ut aliquip ex ea commodo consequat. \n                Duis aute irure dolor in reprehenderit in {_x.one} velit \n                esse cillum dolore eu fugiat nulla {_x.three}. Excepteur sint \n                occaecat {_x.one} non proident, sunt in culpa qui officia \n                deserunt mollit anim id est laborum.\n            </div>        \n        );        \n    };\n    const simpleEdit = _x => <span contentEditable = \"true\" type = \"text\">{_x}</span>;\n    const setFour = {\n        one: simpleEdit(\"ONE\"),\n        two: simpleEdit(\"TWO\"),\n        three: simpleEdit(\"THREE\"),\n        four: simpleEdit(\"FOUR\"),\n        solidVars:{},\n        liquidVars:{}\n    };\n    const SideBarInput = _x => {\n        return (\n              <div>\n                varibles:<br/>\n                <div>{_x.one}</div>\n                <div>{_x.two}</div>\n                <div>{_x.three}</div>\n                <div>{_x.four}</div>\n              </div>\n        );        \n    };\n    \n\n// COMPONENTS ----------------------------------------------------------------------------------------------\n\n    const Head = () => {\n        return (\n            <div className=\"header\">\n                <h1>Hello, I'm a doc builder! </h1>\n            </div>\n        );\n    };\n    const Sidebar = () => {\n        return(\n           <div className=\"sidebar\">\n            <SideBarInput {...setFour}/>\n           </div> \n        );\n    };\n    const Content = () => {\n        return(\n            <div className=\"content\">        \n            <ImmediateInput {...setFour} />\n           \n            </div>\n        );\n    };\n    const Alert = x => <div>{x}</div>;\n    \n    \n// MAIN -------------------------------------------------------------------------------------------------------------\n\n    const App = () => {\n    const [one,setOne] = useState('initOneState');    \n    const makeEditable = _content => {\n        return (\n            <div\n                contentEditable='true'\n                onInput={e => setOne(e.currentTarget.textContent)}\n            >\n            {_content}\n            </div>\n       );\n    };\n      return (\n        <div>\n            <div className=\"wrapper\">\n         \n                <Head />\n                <Sidebar />\n                <Content />\n                <div>one init state: {one} </div>\n                \n            </div>\n            <div>\n                div for editable content<br/>\n                {makeEditable(\"text for classroom\")}\n            </div>\n        </div>\n      );\n    }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}