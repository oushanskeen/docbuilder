{"ast":null,"code":"var _jsxFileName = \"/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js\";\nimport React from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nconst immediateInput = _x => {\n  return \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, \\n        sed do eiusmod \".concat(_x.one, \" incididunt ut labore et dolore magna \\n        aliqua. Ut enim ad minim \").concat(_x.four, \", quis nostrud exercitation \\n        \").concat(_x.two, \" laboris nisi ut aliquip ex ea commodo consequat. \\n        Duis aute irure dolor in reprehenderit in \").concat(_x.one, \" velit \\n        esse cillum dolore eu fugiat nulla \").concat(_x.three, \". Excepteur sint \\n        occaecat \").concat(_x.one, \" non proident, sunt in culpa qui officia \\n        deserunt mollit anim id est laborum.\");\n};\n\nconst assert = (_statement, _function, _positiveOutcome) => {\n  return JSON.stringify(_function) === JSON.stringify(_positiveOutcome) ? console.log(\"YES! \".concat(_statement, \", ooph!\")) : console.log(\"NOPE! \".concat(_statement, \" works WRONG!!!\"));\n};\n\nconst simpleEdit = _x => {\n  const inp = document.createElement(\"span\");\n  inp.contentEditable = \"true\";\n  inp.type = \"text\";\n  inp.innerText = _x;\n  return inp;\n};\n\nconst singleWrapper = _input => {\n  const wrapped = document.createElement('div');\n  wrapped.innerHTML = _input;\n  return wrapped;\n};\n\nassert(\"Wrapper wraps in div (for now)\", singleWrapper(\"meatloaf\").outerHTML, \"<div>meatloaf</div>\");\nconst setFour = {\n  one: simpleEdit(\"ONE\").outerHTML,\n  two: simpleEdit(\"TWO\").outerHTML,\n  three: simpleEdit(\"THREE\").outerHTML,\n  four: simpleEdit(\"FOUR\").outerHTML,\n  solidVars: {},\n  liquidVars: {}\n};\n\nconst simpleText = () => {\n  const simpleText = document.createElement(\"div\");\n  simpleText.appendChild(singleWrapper(immediateInput(setFour)));\n  return simpleText;\n};\n\nconst multiWrapper = _kids => {\n  const localRoot = document.createElement('div');\n\n  _kids.map(e => localRoot.appendChild(singleWrapper(e)));\n\n  return localRoot;\n};\n\nassert(\"Local root looks like I want it to\", multiWrapper([\"one\", \"two\"]).outerHTML, \"<div><div>one</div><div>two</div></div>\"); //document.getElementById('root').appendChild(simpleText());\n//document.getElementById('sidebar').appendChild(setUnboxer(setFour));\n//console.log(document.getElementById('root'));\n\nconst Content = () => {\n  return React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"HEELO, me content!\");\n};\n\nconst App = () => {\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Hello, I'm a doc builder! \")), React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"variables\"), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/oushanskeen/Documents/1_WORK/BUILD/08 DocumentConstructor/docConReact/doccon/src/App.js"],"names":["React","immediateInput","_x","one","four","two","three","assert","_statement","_function","_positiveOutcome","JSON","stringify","console","log","simpleEdit","inp","document","createElement","contentEditable","type","innerText","singleWrapper","_input","wrapped","innerHTML","outerHTML","setFour","solidVars","liquidVars","simpleText","appendChild","multiWrapper","_kids","localRoot","map","e","Content","App"],"mappings":"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","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nconst immediateInput = _x => {\n    return (\n        `Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n        sed do eiusmod ${_x.one} incididunt ut labore et dolore magna \n        aliqua. Ut enim ad minim ${_x.four}, quis nostrud exercitation \n        ${_x.two} laboris nisi ut aliquip ex ea commodo consequat. \n        Duis aute irure dolor in reprehenderit in ${_x.one} velit \n        esse cillum dolore eu fugiat nulla ${_x.three}. Excepteur sint \n        occaecat ${_x.one} non proident, sunt in culpa qui officia \n        deserunt mollit anim id est laborum.`        \n    );        \n};\nconst assert = (_statement,_function,_positiveOutcome) => {\n    return(\n            JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n            ? console.log(`YES! ${_statement}, ooph!`) \n            : console.log(`NOPE! ${_statement} works WRONG!!!`)\n    );\n};\nconst simpleEdit = _x => {\n    const inp = document.createElement(\"span\");\n    inp.contentEditable = \"true\";\n    inp.type = \"text\";\n    inp.innerText = _x;\n    return inp;\n};\nconst singleWrapper = _input => {\n    const wrapped = document.createElement('div');\n    wrapped.innerHTML = _input;\n    return wrapped;\n};\nassert(\n    \"Wrapper wraps in div (for now)\",\n    singleWrapper(\"meatloaf\").outerHTML,\n    `<div>meatloaf</div>`\n);\nconst setFour = {\n    one: simpleEdit(\"ONE\").outerHTML,\n    two: simpleEdit(\"TWO\").outerHTML,\n    three: simpleEdit(\"THREE\").outerHTML,\n    four: simpleEdit(\"FOUR\").outerHTML,\n    solidVars:{},\n    liquidVars:{}\n};\nconst simpleText = () => {\n    const simpleText = document.createElement(\"div\");\n    simpleText.appendChild(singleWrapper(immediateInput(setFour)));\n    return simpleText;\n};\nconst multiWrapper = _kids => {\n    const localRoot = document.createElement('div');\n    _kids.map(e => localRoot.appendChild(singleWrapper(e)));\n    return localRoot;\n};\nassert(\n    \"Local root looks like I want it to\",\n    multiWrapper([\"one\",\"two\"]).outerHTML,\n    `<div><div>one</div><div>two</div></div>`\n);\n//document.getElementById('root').appendChild(simpleText());\n//document.getElementById('sidebar').appendChild(setUnboxer(setFour));\n//console.log(document.getElementById('root'));\nconst Content = () => {\n    return(\n        <div className=\"content\">        \n            HEELO, me content!\n        </div>\n    );\n};\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n        <div className=\"header\">\n            <h1>Hello, I'm a doc builder! </h1>\n        </div>\n        <div className=\"sidebar\">variables</div>\n        <Content />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}